{"version":3,"sources":["utils/math.js","feature/calc/CalcPdf.jsx"],"names":["getNumberFromLen","numberLength","num","Math","random","pow","parseInt","formatAnswerNumber","number","len","n","getData","count","divisionFn","a","b","addAndSubFn","mulFn","mapTypeToFn","1","2","3","arr","i","c","push","defaultColumn","type","label","span","CalcPdf","useState","column","data","setData","prefix","useEffect","document","title","newData","console","log","className","map","item","index","length","j","includes"],"mappings":"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","file":"static/js/19.57d00bf8.chunk.js","sourcesContent":["export const getNumberFromLen = numberLength => {\r\n    var num = Math.random()\r\n    while (num < Math.pow(10, numberLength - 1)) {\r\n        num *= 10\r\n    }\r\n    return parseInt(num)\r\n}\r\n// number是数字，len是保留的位数，并且放大到的位数\r\n// 例如\r\n// formatAnswerNumber(0.03813, 2) => 38\r\n// formatAnswerNumber(0.03813, 3) => 381\r\nexport const formatAnswerNumber = (number, len) => {\r\n    let n = number\r\n    if (n > 100) n /= 10\r\n    while (n < Math.pow(10, len - 1)) {\r\n        n *= 10\r\n    }\r\n    return parseInt(n)\r\n}\r\n","// pdf版本\r\n\r\nimport { Alert, Button, Col, Input, Radio, Row, Form } from 'antd'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { formatAnswerNumber, getNumberFromLen } from '../../utils/math'\r\nimport './Calc.scss'\r\nimport './CalcPdf.scss'\r\n\r\n/**\r\n * {\r\n *    formula：'', // 算式\r\n *    formatAnswer: '', // 真实答案\r\n *    time: '', //耗时\r\n *    input: '', // inputValue用户输入的答案\r\n *    errorAnalysis:\r\n * }\r\n * ['A', 'B', 'A+B', 'A-b'], ['A', 'B', 'A*B'], ['A', 'B', 'A÷B']\r\n *\r\n */\r\n// type: 1加减法\r\n// type: 2乘法\r\n// type: 3除法\r\nconst getData = (count = 20) => {\r\n    // 除法\r\n    const divisionFn = () => {\r\n        const a = getNumberFromLen(5)\r\n        const b = getNumberFromLen(3)\r\n        return [a, b, formatAnswerNumber(a / b, 3)]\r\n    }\r\n\r\n    // 加减\r\n    const addAndSubFn = () => {\r\n        const a = getNumberFromLen(3)\r\n        const b = getNumberFromLen(3)\r\n        return [a, b, a + b, a - b]\r\n    }\r\n\r\n    // 2*1位乘法\r\n    const mulFn = () => {\r\n        const a = getNumberFromLen(2)\r\n        let b = getNumberFromLen(1)\r\n        while (b < 2) {\r\n            b = getNumberFromLen(1)\r\n        }\r\n        return [a, b, a * b]\r\n    }\r\n    // 加法\r\n    const mapTypeToFn = {\r\n        1: addAndSubFn,\r\n        2: mulFn,\r\n        3: divisionFn,\r\n    }\r\n    const arr = []\r\n    for (let i = 0; i < count; i++) {\r\n        let a = mapTypeToFn[1]()\r\n        let b = mapTypeToFn[2]()\r\n        let c = mapTypeToFn[3]()\r\n        arr.push([i + 1, ...a, ...b, ...c])\r\n    }\r\n    return arr\r\n}\r\n\r\nconst defaultColumn = [\r\n    {\r\n        type: 'span',\r\n        label: '',\r\n        span: 2,\r\n    },\r\n    {\r\n        type: 'span',\r\n        label: 'A',\r\n        span: 2,\r\n    },\r\n    {\r\n        type: 'span',\r\n        label: 'B',\r\n        span: 2,\r\n    },\r\n    {\r\n        type: 'span',\r\n        label: 'A+B',\r\n        span: 2,\r\n    },\r\n    {\r\n        type: 'span',\r\n        label: 'A-B',\r\n        span: 2,\r\n    },\r\n    {\r\n        type: 'span',\r\n        label: 'A',\r\n        span: 2,\r\n    },\r\n    {\r\n        type: 'span',\r\n        label: 'B',\r\n        span: 2,\r\n    },\r\n    {\r\n        type: 'span',\r\n        label: 'A*B',\r\n        span: 2,\r\n    },\r\n    {\r\n        type: 'span',\r\n        label: 'A',\r\n        span: 2,\r\n    },\r\n    {\r\n        type: 'span',\r\n        label: 'B',\r\n        span: 2,\r\n    },\r\n    {\r\n        type: 'span',\r\n        label: 'A÷B',\r\n        span: 2,\r\n    },\r\n]\r\n\r\nconst CalcPdf = () => {\r\n    const [column, setColumn] = useState(defaultColumn)\r\n    const [data, setData] = useState(() => getData())\r\n    const prefix = 'calc-wrap calc-pdf'\r\n\r\n    useEffect(() => {\r\n        document.title = '速算练习'\r\n        const newData = getData()\r\n\r\n        console.log('new', newData)\r\n        setData(newData)\r\n    }, [])\r\n\r\n    // 24133 44424 22443 43434\r\n    return (\r\n        <div className={prefix}>\r\n            <div className='test'>\r\n                <h3>速算技巧练习</h3>\r\n                <div className={`${prefix}-content`}>\r\n                    <div className='list'>\r\n                        <Row className='column list-item'>\r\n                            {column.map((item, index) => {\r\n                                return (\r\n                                    <div key={index} className='list-item-num'>\r\n                                        {item.label}\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </Row>\r\n                        <div className='data'>\r\n                            {data.map((arr, index) => {\r\n                                console.log('arr', arr.length)\r\n                                return (\r\n                                    <Row\r\n                                        className='list-item'\r\n                                        key={`item-${index}`}\r\n                                    >\r\n                                        {arr.map((item, j) => {\r\n                                            // 隐藏答案行\r\n                                            const hides = [3, 4, 7, 10]\r\n                                            return (\r\n                                                <div\r\n                                                    className='list-item-num'\r\n                                                    key={j}\r\n                                                >\r\n                                                    {hides.includes(j)\r\n                                                        ? ''\r\n                                                        : item}\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </Row>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='test-answer'>\r\n                <h3>速算技巧答案</h3>\r\n                <div className={`${prefix}-content`}>\r\n                    <div className='list'>\r\n                        <Row className='column list-item'>\r\n                            {column.map((item, index) => {\r\n                                return (\r\n                                    <div key={index} className='list-item-num'>\r\n                                        {item.label}\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </Row>\r\n                        <div className='data'>\r\n                            {data.map((arr, index) => {\r\n                                console.log('arr', arr.length)\r\n                                return (\r\n                                    <Row\r\n                                        className='list-item'\r\n                                        key={`item-${index}`}\r\n                                    >\r\n                                        {arr.map((item, j) => {\r\n                                            // 隐藏答案行\r\n                                            const hides = [3, 4, 7, 10]\r\n                                            return (\r\n                                                <div\r\n                                                    className={`list-item-num ${\r\n                                                        hides.includes(j)\r\n                                                            ? 'daan'\r\n                                                            : ''\r\n                                                    }`}\r\n                                                    key={j}\r\n                                                >\r\n                                                    {item}\r\n                                                </div>\r\n                                            )\r\n                                        })}\r\n                                    </Row>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalcPdf\r\n"],"sourceRoot":""}