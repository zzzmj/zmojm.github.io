{"version":3,"sources":["service/question.js","feature/xingce/XingCe.jsx","service/index.js"],"names":["getQuestionList","questionIds","query","LC","Query","limit","containedIn","find","existQuestion","objectId","equalTo","addQuestion","data","list","forEach","item","question","Object","extend","keys","key","set","push","saveAll","updateQuestionNotes","notes","createWithoutData","save","addCategoryQuestion","getCategoryQuestion","get","addCustomWrongQuestionCategory","getCustomWrongQuestionCategory","XingCe","useState","categoryList","setCategoryList","history","useNavigate","useEffect","then","res","toJSON","content","processCategoryList","console","log","title","className","name","length","onClick","id","shape","children","treeData","init","appId","appKey","serverURL"],"mappings":"yGAAA,4RAEaA,EAAkB,SAAAC,GAC3B,IAAMC,EAAQ,IAAIC,IAAGC,MAAM,YAM3B,OAJAF,EAAMG,MAAM,KACRJ,GACAC,EAAMI,YAAY,KAAML,GAErBC,EAAMK,QAGJC,EAAgB,SAAAC,GACzB,IAAMP,EAAQ,IAAIC,IAAGC,MAAM,YAO3B,MANwB,kBAAbK,EACPP,EAAMI,YAAY,KAAMG,GAExBP,EAAMQ,QAAQ,KAAMD,GAExBP,EAAMG,MAAM,KACLH,EAAMK,QAIJI,EAAc,SAAAC,GACvB,IAAMC,EAAO,GASb,OARAD,EAAKE,SAAQ,SAAAC,GACT,IACMC,EAAW,IADAb,IAAGc,OAAOC,OAAO,aAElCD,OAAOE,KAAKJ,GAAMD,SAAQ,SAAAM,GACtBJ,EAASK,IAAID,EAAKL,EAAKK,OAE3BP,EAAKS,KAAKN,MAEPb,IAAGc,OAAOM,QAAQV,IAGhBW,EAAsB,SAACf,EAAUgB,GAG1C,OAFUtB,IAAGc,OAAOS,kBAAkB,eAAgBjB,GAE7CkB,KAAK,CAAEF,WAWPG,EAAsB,SAAAhB,GAC/B,IAAII,EAAWb,IAAGc,OAAOS,kBACrB,WACA,4BAKJ,OAHAT,OAAOE,KAAKP,GAAME,SAAQ,SAAAM,GACtBJ,EAASK,IAAID,EAAKR,EAAKQ,OAEpBJ,EAASW,QAGPE,EAAsB,SAAApB,GAE/B,OADc,IAAIN,IAAGC,MAAM,YACd0B,IAAIrB,GAAY,6BAIpBsB,EAAiC,SAAAnB,GAC1C,IAAII,EAAWb,IAAGc,OAAOS,kBACrB,WACA,4BAKJ,OAHAT,OAAOE,KAAKP,GAAME,SAAQ,SAAAM,GACtBJ,EAASK,IAAID,EAAKR,EAAKQ,OAEpBJ,EAASW,QAGPK,EAAiC,WAE1C,OADc,IAAI7B,IAAGC,MAAM,YACd0B,IAAI,8B,iIChBNG,UArDA,WACX,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAUC,cAChBC,qBAAU,WACNV,cAAsBW,MAAK,SAAAC,GACvB,IAAM7B,EAAO6B,EAAIC,SAASC,QAC1BC,EAAoBhC,GACpBiC,QAAQC,IAAI,MAAOlC,GACnBwB,EAAgBxB,QAErB,IAGH,IAIMgC,EAAsB,SAAtBA,EAAsBhC,GAExBA,EAAKE,SAAQ,SAAAC,GACTA,EAAKgC,MACD,sBAAKC,UAAU,gBAAf,UACI,qBAAKA,UAAU,OAAf,SAAuBjC,EAAKkC,OAC5B,sBAAKD,UAAU,MAAf,UAAsBjC,EAAKd,YAAYiD,OAAvC,YACA,qBAAKF,UAAU,WAAf,SACI,cAAC,IAAD,CACIG,QAAS,kBACepC,EAAKd,YAdXmD,EAcwBrC,EAAKqC,QAbnEf,EAAQf,KAAR,kBAAwB8B,IADA,IAAcA,GAgBlBC,MAAM,QAJV,2CAWZtC,EAAKK,IAAML,EAAKqC,GACZrC,EAAKuC,UACLV,EAAoB7B,EAAKuC,cAKrC,OACI,sBAAKN,UAAU,UAAf,yBAEI,qBAAKA,UAAU,WAAf,SACI,cAAC,IAAD,CAAMA,UAAU,eAAeO,SAAUpB,W,kECxDzDhC,IAAGqD,KAAK,CACJC,MAAO,oCACPC,OAAQ,2BACRC,UAAW,yCAkBAxD,MAAf","file":"static/js/21.9a05ab36.chunk.js","sourcesContent":["import LC from './index'\r\n\r\nexport const getQuestionList = questionIds => {\r\n    const query = new LC.Query('Question')\r\n    // query.descending('createdAt')\r\n    query.limit(1000)\r\n    if (questionIds) {\r\n        query.containedIn('id', questionIds)\r\n    }\r\n    return query.find()\r\n}\r\n\r\nexport const existQuestion = objectId => {\r\n    const query = new LC.Query('Question')\r\n    if (typeof objectId === 'object') {\r\n        query.containedIn('id', objectId)\r\n    } else {\r\n        query.equalTo('id', objectId)\r\n    }\r\n    query.limit(1000)\r\n    return query.find()\r\n}\r\n\r\n// 新增题目到leanCloud\r\nexport const addQuestion = data => {\r\n    const list = []\r\n    data.forEach(item => {\r\n        const Question = LC.Object.extend('Question')\r\n        const question = new Question()\r\n        Object.keys(item).forEach(key => {\r\n            question.set(key, item[key])\r\n        })\r\n        list.push(question)\r\n    })\r\n    return LC.Object.saveAll(list)\r\n}\r\n\r\nexport const updateQuestionNotes = (objectId, notes) => {\r\n    const q = LC.Object.createWithoutData('QuestionBook', objectId)\r\n    // 更新笔记\r\n    return q.save({ notes })\r\n}\r\n\r\n// delete\r\nexport const deleteQuestion = objectId => {\r\n    const question = LC.Object.createWithoutData('Question', objectId)\r\n    return question.destroy()\r\n}\r\n\r\n// 这是粉笔错题分类表\r\n// 种类表添加种类\r\nexport const addCategoryQuestion = data => {\r\n    let question = LC.Object.createWithoutData(\r\n        'Category',\r\n        '62031ff0a10bf856ff93cf99'\r\n    )\r\n    Object.keys(data).forEach(key => {\r\n        question.set(key, data[key])\r\n    })\r\n    return question.save()\r\n}\r\n\r\nexport const getCategoryQuestion = objectId => {\r\n    const query = new LC.Query('Category')\r\n    return query.get(objectId || '62031ff0a10bf856ff93cf99')\r\n}\r\n\r\n// 自定义错题分类表\r\nexport const addCustomWrongQuestionCategory = data => {\r\n    let question = LC.Object.createWithoutData(\r\n        'Category',\r\n        '6253f0461122b910ec5dfd1e'\r\n    )\r\n    Object.keys(data).forEach(key => {\r\n        question.set(key, data[key])\r\n    })\r\n    return question.save()\r\n}\r\n\r\nexport const getCustomWrongQuestionCategory = () => {\r\n    const query = new LC.Query('Category')\r\n    return query.get('6253f0461122b910ec5dfd1e')\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Upload, Tree, Button } from 'antd'\r\nimport { InboxOutlined } from '@ant-design/icons'\r\nimport {\r\n    addCategoryQuestion,\r\n    addQuestion,\r\n    getCategoryQuestion,\r\n    getQuestionList,\r\n} from '../../service/question'\r\nimport './XingCe.scss'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst XingCe = () => {\r\n    const [categoryList, setCategoryList] = useState([])\r\n    const history = useNavigate()\r\n    useEffect(() => {\r\n        getCategoryQuestion().then(res => {\r\n            const data = res.toJSON().content\r\n            processCategoryList(data)\r\n            console.log('res', data)\r\n            setCategoryList(data)\r\n        })\r\n    }, [])\r\n\r\n    // 开始练习\r\n    const handleClickPractice = (questionIds, id) => {\r\n        history.push(`/xingce/${id}`)\r\n    }\r\n\r\n    const processCategoryList = data => {\r\n        // 处理数据\r\n        data.forEach(item => {\r\n            item.title = (\r\n                <div className='category-item'>\r\n                    <div className='name'>{item.name}</div>\r\n                    <div className='num'>{item.questionIds.length}题</div>\r\n                    <div className='practice'>\r\n                        <Button\r\n                            onClick={() =>\r\n                                handleClickPractice(item.questionIds, item.id)\r\n                            }\r\n                            shape='round'\r\n                        >\r\n                            开始练习\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            )\r\n            item.key = item.id\r\n            if (item.children) {\r\n                processCategoryList(item.children)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='xing-ce'>\r\n            hello, world\r\n            <div className='category'>\r\n                <Tree className='xing-ce-tree' treeData={categoryList} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default XingCe\r\n","import LC from 'leancloud-storage'\r\n\r\n// leanCloud 初始化\r\nLC.init({\r\n    appId: 'zhG78X78KsJ4MuyLquDrtexj-gzGzoHsz',\r\n    appKey: 'QhcOlKH32P32CCaEUbzJJWbo',\r\n    serverURL: 'https://zhg78x78.lc-cn-n1-shared.com',\r\n})\r\n\r\n// 封装增删改查的函数\r\n\r\nclass Util {\r\n    // get查询\r\n    get(options) {\r\n        const { tableName, objectId } = options\r\n        const query = new LC.Query(tableName)\r\n        if (objectId) return query.get(objectId)\r\n        else {\r\n            query.limit(1000)\r\n            return query.find()\r\n        }\r\n    }\r\n}\r\n\r\nexport default LC\r\n"],"sourceRoot":""}